// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreetWorkout.Data;

#nullable disable

namespace StreetWorkout.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221207194929_AddExerciseImageUrl")]
    partial class AddExerciseImageUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquipmentExercise", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("ExercisesId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "ExercisesId");

                    b.HasIndex("ExercisesId");

                    b.ToTable("EquipmentExercise");
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Equipment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dumbells"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pull up bar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rings"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Training bands"
                        });
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Description");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Exercises", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Really basic exercise.",
                            Name = "Pull up"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Another basic exercise",
                            Name = "Push up"
                        },
                        new
                        {
                            Id = 3,
                            Description = "An interesting push up",
                            Name = "Archer push up"
                        });
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.ExerciseTraining", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("int")
                        .HasColumnName("ExerciseId");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int")
                        .HasColumnName("TrainingId");

                    b.Property<TimeSpan>("BreakAfterExercise")
                        .HasColumnType("time")
                        .HasColumnName("BreakAfterExercise");

                    b.Property<int>("NumberOfReps")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfReps");

                    b.HasKey("ExerciseId", "TrainingId");

                    b.HasIndex("TrainingId");

                    b.ToTable("ExerciseTraining", (string)null);

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            TrainingId = 1,
                            BreakAfterExercise = new TimeSpan(0, 0, 1, 0, 0),
                            NumberOfReps = 10
                        },
                        new
                        {
                            ExerciseId = 2,
                            TrainingId = 1,
                            BreakAfterExercise = new TimeSpan(0, 0, 1, 0, 0),
                            NumberOfReps = 25
                        });
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.Program", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Description");

                    b.Property<short>("Difficulty")
                        .HasColumnType("smallint")
                        .HasColumnName("Difficulty");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Programs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A program everyone should start with.",
                            Difficulty = (short)0,
                            Name = "Begginers luck"
                        });
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.ProgramTraining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int")
                        .HasColumnName("DayOfWeek");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("ProgramId");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int")
                        .HasColumnName("TrainingId");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.HasIndex("TrainingId");

                    b.ToTable("ProgramTraining", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = 1,
                            ProgramId = 1,
                            TrainingId = 1
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = 3,
                            ProgramId = 1,
                            TrainingId = 1
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeek = 5,
                            ProgramId = 1,
                            TrainingId = 1
                        });
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("Description");

                    b.Property<short>("Difficulty")
                        .HasColumnType("smallint")
                        .HasColumnName("Difficulty");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Trainings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Evereyone should start with this training",
                            Difficulty = (short)1,
                            Name = "Pull push"
                        });
                });

            modelBuilder.Entity("EquipmentExercise", b =>
                {
                    b.HasOne("StreetWorkout.Data.Models.Equipment", null)
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreetWorkout.Data.Models.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.ExerciseTraining", b =>
                {
                    b.HasOne("StreetWorkout.Data.Models.Exercise", "Exercise")
                        .WithMany("ExerciseTrainings")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreetWorkout.Data.Models.Training", "Training")
                        .WithMany("ExerciseTrainings")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.ProgramTraining", b =>
                {
                    b.HasOne("StreetWorkout.Data.Models.Program", "Program")
                        .WithMany("ProgramTrainings")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreetWorkout.Data.Models.Training", "Training")
                        .WithMany("ProgramTrainings")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.Exercise", b =>
                {
                    b.Navigation("ExerciseTrainings");
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.Program", b =>
                {
                    b.Navigation("ProgramTrainings");
                });

            modelBuilder.Entity("StreetWorkout.Data.Models.Training", b =>
                {
                    b.Navigation("ExerciseTrainings");

                    b.Navigation("ProgramTrainings");
                });
#pragma warning restore 612, 618
        }
    }
}
